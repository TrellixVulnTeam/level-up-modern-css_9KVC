@charset "UTF-8";
/*
Credit to Andy Bell's Modern CSS Reset
@link https://piccalil.li/blog/a-modern-css-reset/

ðŸŸ£ = additions by Stephanie Eckles 
Twitter/Github/Codepen: @5t3ph
*/
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, 
which suggests default styling will be removed 

ðŸŸ£ Selector updated to reduce specificity
*/
:where(ul, ol):where([role="list"]) {
  margin: 0;
  padding: 0;
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
  text-rendering: optimizeSpeed;
  /* ðŸŸ£ Set base font-family */
  font-family: system-ui, sans-serif;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  /* ðŸŸ£ Relatively sized thickness and offset */
  text-decoration-thickness: max(0.08em, 1px);
  text-underline-offset: 0.15em;
}

/* Make images easier to work with */
img,
picture,
svg {
  display: block;
  max-width: 100%;
}

/* ðŸŸ£ Ensure images with a width attr responsively resize */
img[width] {
  height: auto;
}

/* ðŸŸ£ Give SVGs common baseline */
svg {
  /* Inherit from text color */
  fill: currentColor;
  /* Allow click events to "fall through" */
  pointer-events: none;
}

/* ðŸŸ£ Scroll margin allowance above anchor links */
:target {
  scroll-margin-top: 2rem;
}

/* ðŸŸ£ Scroll margin allowance below focused elements 
to ensure they are clearly in view */
:focus {
  scroll-margin-bottom: 8vh;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
*::before,
*::after {
    transition-duration: 0.01ms !important;
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    scroll-behavior: auto !important;
  }
}
/* ðŸ›‘ STOP!
  Do not change this file directly.
  Modify colors in src/_data/colors.js
 */
:root {
  --color-primary: #5920df;
  --color-on-primary: white;
  --color-error: #df2040;
  --color-on-error: #fff7f8;
  --color-text: #463d5c;
  --color-on-text: #b0abbe;
  --color-background: #fcfbfe;
  --color-links: var(--color-primary);
}

h4,
.h4 {
  font-size: 1.333rem;
  font-size: clamp(
        1rem,
        4.333vw + 1rem,
        1.333rem
      );
}

h3,
.h3 {
  font-size: 1.776889rem;
  font-size: clamp(
        1.19051563rem,
        4.58637337vw + 1rem,
        1.776889rem
      );
}

h2,
.h2 {
  font-size: 2.368593037rem;
  font-size: clamp(
        1.5869573348rem,
        4.7816357022vw + 1rem,
        2.368593037rem
      );
}

h1,
.h1 {
  font-size: 3.1573345183rem;
  font-size: clamp(
        2.1154141273rem,
        5.041920391vw + 1rem,
        3.1573345183rem
      );
}

:is(h1, h2, h3, h4, .h1, .h2, .h3, .h4) {
  line-height: calc(2px + 2ex + 2px);
  margin-block-end: 0.65em;
  overflow-wrap: break-word;
  hyphens: auto;
  font-weight: var(--font-weight-bold);
}

article, .content {
  --content-spacer: 1em;
}
article > * + *,
article :where(ul:not([class]), ol:not([class])) li + li, .content > * + *,
.content :where(ul:not([class]), ol:not([class])) li + li {
  margin-block-start: var(--content-spacer);
}
article :where(h2, h3:not(h2 + *)):where(:not(:first-child)), .content :where(h2, h3:not(h2 + *)):where(:not(:first-child)) {
  margin-block-start: 2em;
}
article :where(ul, ol) + p, .content :where(ul, ol) + p {
  margin-block-start: calc(var(--content-spacer) * 2);
}
article > a:not([class]), .content > a:not([class]) {
  display: inline-block;
}
article blockquote, .content blockquote {
  margin-block: 2em;
  padding: 0.5em 1.5em;
  border-inline-start: 2px solid var(--color-primary);
  font-size: 1.333rem;
}

hr {
  margin: 8vh 5vw;
  border-style: dashed;
  border-color: var(--color-primary);
}

strong {
  font-weight: var(--font-weight-bold);
}

a:not([class]) {
  color: var(--color-links);
}

:is(a, button, input, textarea) {
  --outline-size: max(2px, 0.08em);
  --outline-style: solid;
  --outline-color: currentColor;
}
:is(a, button, input, textarea):focus {
  outline: var(--outline-size) var(--outline-style) var(--outline-color);
  outline-offset: var(--outline-offset, var(--outline-size));
}
:is(a, button, input, textarea):focus-visible {
  outline: var(--outline-size) var(--outline-style) var(--outline-color);
  outline-offset: var(--outline-offset, var(--outline-size));
}
:is(a, button, input, textarea):focus:not(:focus-visible) {
  outline: none;
}

.background-primary {
  background-color: var(--color-primary);
  color: var(--color-on-primary);
}

.color-primary {
  color: var(--color-primary);
}

.color-on-primary {
  color: var(--color-on-primary);
}

.background-error {
  background-color: var(--color-error);
  color: var(--color-on-error);
}

.color-error {
  color: var(--color-error);
}

.color-on-error {
  color: var(--color-on-error);
}

.background-text {
  background-color: var(--color-text);
  color: var(--color-on-text);
}

.color-text {
  color: var(--color-text);
}

.color-on-text {
  color: var(--color-on-text);
}

.container {
  width: 80ch;
  max-width: 95vw;
  margin-inline: auto;
}

.layout-flex {
  --gap: 2rem;
  --wrap: wrap;
  display: flex;
  flex-wrap: var(--wrap);
  gap: var(--gap);
}

.section, section {
  margin-block: 8vh;
}

.inclusively-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  white-space: nowrap;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
}

.layout-grid {
  --gap: 1rem;
  display: grid;
  gap: var(--gap);
}
.layout-grid--columns {
  grid-auto-flow: column;
}
.layout-grid--auto-fit {
  --min: 20ch;
  grid-template-columns: repeat(auto-fit, minmax(min(var(--min), 100%), 1fr));
}
.layout-grid--auto-fill {
  --min: 30ch;
  grid-template-columns: repeat(auto-fill, minmax(min(var(--min), 100%), 1fr));
}
.layout-grid--sidebar {
  --sidebar-max: 20ch;
  --content-min: 80ch;
  grid-template-columns: fit-content(var(--sidebar-max)) minmax(min(50vw, var(--content-min)), 1fr);
}
.layout-grid--centered {
  place-content: center;
}
.layout-grid--stack {
  grid-template-areas: "stack";
  place-items: center;
}
.layout-grid--stack > * {
  grid-area: stack;
  place-self: var(--place-self);
  align-self: var(--align-self, var(--place-self));
  justify-self: var(--justify-self, var(--place-self));
}

.image {
  aspect-ratio: var(--image-aspect-ratio);
  object-fit: cover;
  max-height: var(--image-max-height);
}
@supports not (aspect-ratio: 1) {
  .image {
    height: var(--ratio-unsupported-height) !important;
  }
}
.image--fullwidth {
  width: 100%;
}

.navbar {
  padding: 1rem;
}
.navbar ul {
  --gap:1rem;
  align-items: center;
  justify-content: center;
}
.navbar a:not([class]) {
  --outline-offset: 0.25em;
  color: inherit;
  text-decoration: none;
}
.navbar a:not([class]):hover {
  text-decoration: underline;
}
.navbar a:not([class]):focus, .navbar a:not([class]):focus-visible {
  border-radius: 2px;
}
.navbar a.navbar-image {
  color: inherit;
}
.navbar--centered {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  gap: 1rem;
}
.navbar--divided {
  --breakpoint: 70ch;
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}
.navbar--divided::before {
  content: "";
  flex-grow: 100;
  flex-basis: calc((var(--breakpoint) - 100%) * 500);
}
.navbar--divided > :first-child {
  order: -1;
}

.hero {
  --hero-min-height: 30vh;
  --hero-padding: 2rem;
  --hero-gap: 2vh;
  display: grid;
  min-height: var(--hero-min-height);
  padding: var(--hero-padding);
  gap: var(--hero-gap);
}
.hero a:not([class]) {
  color: inherit;
}
.hero--centered {
  place-content: center;
  justify-items: center;
  text-align: center;
}
.hero--image-stack {
  --hero-padding: 0;
  --hero-min-height: 0;
  --hero-height: max(40vh, 15rem);
}
.hero--image-stack img {
  width: 100%;
  object-fit: cover;
  height: var(--hero-height);
}
.hero__content {
  --content-text-align: center;
  --content-padding: 1rem;
  padding-inline: var(--content-padding);
  text-align: var(--content-text-align);
}
.hero__content > :only-child {
  margin: 0;
}

.button {
  --button-background: var(--color-primary);
  --button-color: var(--color-on-primary);
  --outline-color: transparent;
  text-decoration: none;
  padding: 0.25em 0.75em;
  border: 2px solid transparent;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5em;
  border-radius: 0.25em;
  background-color: var(--button-background);
  color: var(--button-color);
  min-width: 10ch;
  min-height: 44px;
  text-align: center;
  line-height: 1;
  font-weight: bold;
  transition: none 180ms ease-in-out;
  transition-property: background-color, color, border-color;
}
.button:hover, .button:active {
  background-color: var(--button-color);
  color: var(--button-background);
  border-color: currentColor;
}
.button:focus {
  box-shadow: 0 0 0 max(0.15em, 2px) var(--button-focus-inner, var(--button-color)), 0 0 0 max(0.3em, 4px) var(--button-focus-outer, var(--button-background));
}
.button--error {
  --button-background: var(--color-error);
  --button-color: var(--color-on-error);
}
.button--text {
  --button-background: var(--color-text);
  --button-color: var(--color-on-text);
}
.button__icon {
  width: 1em;
  height: 1em;
  flex-shrink: 0;
}
.button-icon {
  border-radius: 50%;
  min-width: unset;
}

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: var(--card-gap, 1rem);
  border-radius: var(--card-radius, 0.25rem);
  background-color: var(--card-background, #fff);
  box-shadow: 0 0.25rem 0.45rem -0.15rem rgba(0, 0, 0, 0.5);
}

.template-dashboard {
  display: grid;
  grid-template-areas: "header header" "nav main" "nav footer";
  grid-auto-rows: auto 1fr auto;
  grid-template-columns: 30ch 1fr;
}
.template-dashboard header {
  grid-area: header;
}
.template-dashboard header span {
  font-size: 1.125rem;
  font-weight: bold;
}
.template-dashboard nav {
  grid-area: nav;
}
.template-dashboard nav a {
  color: inherit;
}
.template-dashboard main {
  grid-area: main;
}
.template-dashboard footer {
  grid-area: footer;
  border-top: 1px solid var(--color-on-text);
}
.template-dashboard nav,
.template-dashboard main {
  padding: 2rem;
}
.template-dashboard header,
.template-dashboard footer {
  padding: 1rem;
}

.template-holy-grail {
  display: grid;
}
.template-holy-grail header span {
  font-size: 1.125rem;
  font-weight: bold;
}
.template-holy-grail nav a {
  color: inherit;
}
.template-holy-grail aside {
  background-color: var(--color-on-text);
}
.template-holy-grail aside a {
  color: inherit;
}
.template-holy-grail nav,
.template-holy-grail main,
.template-holy-grail aside {
  padding: 2rem;
}
.template-holy-grail header,
.template-holy-grail footer {
  padding: 1rem;
}
@media (min-width: 100ch) {
  .template-holy-grail {
    grid-template-areas: "header header header" "nav main aside" "footer footer footer";
    grid-auto-rows: auto 1fr auto;
    grid-auto-columns: 1fr minmax(50vw, 80ch) 1fr;
  }
  .template-holy-grail header {
    grid-area: header;
  }
  .template-holy-grail nav {
    grid-area: nav;
  }
  .template-holy-grail main {
    grid-area: main;
  }
  .template-holy-grail aside {
    grid-area: aside;
  }
  .template-holy-grail footer {
    grid-area: footer;
  }
}

.template-blog header {
  display: grid;
  place-content: center;
  min-height: 30vh;
}
.template-blog main {
  margin: 8vh auto;
}
.template-blog article {
  display: grid;
  grid-template-columns: [main-start] 1fr [article-start] min(100vw - 2rem, 80ch) [article-end] 1fr [main-end];
}
.template-blog article > *:not(img) {
  grid-column: article;
}
.template-blog article img {
  grid-column: main;
  justify-self: center;
  margin-block: max(68px, 8vh);
}

body {
  background-color: var(--color-background);
}
